<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAKAAAAByCAYAAADUOdoJAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAGOZJREFUeF7tnQW0FNUbwJ9/4xggqBiIAaLH7m7A7sQuRMDAVmzB7u7u7u4CFRVE
        sLu7W8z753fffO99e9+d2Zl9y+zs7PzO+c7Ozs7uzM5+e+Or22QS8NZbb5l99tnH9O/f3xxxxBFmv/32
        M3fffbe5//77zUMPPWQee+wxc88991gZNWqUffzxxx+DdxcUtCWRAj755JPBVrMyHnfcccGzUp555hnT
        1NRk/vvvPzNixAhzzTXXBK8UFJQSWwHXW289s8EGG5jdd9/d3HrrrWbXXXcNXmmmX79+5txzzzWrrLKK
        WXHFFc29994bvGLMbbfdFmwVFJSSqAWEn376yXa/buu3xhprmDPOOCN4VsqBBx4YbBUUlFKigJ9//rkZ
        N26cef/9982HH35o3njjjeCVUu644w4zbNiw4FkrAwcOtIp42mmnmUsvvdTceOONtmWkO2Y8WFDgUqKA
        L7/8stlxxx1Nnz59zEYbbWS3UR661NGjR9tjfv75Z7PIIovYbZfLLrvMHh8m119/fXBkQUEzJQroUxot
        M888s5llllmCo0v5559/vO9xhTHiBx98ELyroNEpUUCUA7OJT3FExo8fHxxdSufOnc28885rx4eYarbd
        dlvv+0844QTTpUsXO4suKChRwLnmmss+XnXVVS0KM+WUU5orrrjCbh977LH2dRcmJLxOCylst912LZ+h
        pVu3bvZ1tn/99Ve7XdC4lCjgU089ZbbZZhu7jUkFJaHFm2+++czUU09t9/vQCrb33ntbk43e58rKK69s
        PvnkE7PVVluZ5557zowcOTL4pIJGo0QBgdnt6quvHjxrBqUJU5LNNtusRbGY9cq2KzPNNJNVYnl+zDHH
        2Fkz0BJuvPHG5tVXX7XPCxqHNgoIY8aMMV27djU77bSTeemll6zChMFr++67r31caqmlWhTMlf33398e
        P2TIELPAAguY1VZbze4XZb/88svt49ixY+1sHHtjQf4J16wJfPHFF+aAAw6wXaYPXHMoyx577NFG4VBi
        d99CCy1klbR3794t3XTPnj3tZ/3999/2UeDc7777rvnuu++CPQV5JFIBhQEDBgRbpcjkRMuGG25oTjnl
        FHP11Ve3ec0nb7/9dvBpzWAI1/zwww/Wt1yQT8oqIFEteDV88JrMmGmthg8fbk0xrpJFydChQ233i/nm
        hRdeMC+++GLw6a1gBGf2fNNNNwV7CvJCWQXccsstg622fPTRR+a+++7zKlalAm70zPzzz19yzNFHHx28
        UlDvlFXAvn37BlttIQ5QlGKyySazEwq2J5988pb9SWWOOeYwyy+/fHCGZg477DDvsczAv//+++Cognok
        UgGXWGKJYCucNddc03a7eDcGDx5sFePwww83p59+ehuFSSICQRGMA33HiCy88MLWbnnXXXeZ9957z/z7
        77/BuwuyTqgCMvEgmLQcm266qVcp2is6eub888/3HiMiY9S//vrLvPLKK1YRb7jhBhv8II/XXnutfdRy
        8803mzvvvNMa4JkM/fLLL/ZzCtLDq4C43JjhxgEzjE8p2it4SAh8BdyBvmOQsMicuBC1/c0339jvQVoB
        CssYFIW97rrrrKJiYGcbhcUu+tprr1lf9jvvvNMSusZ4+M0337Sv0QpnGb4zfzyGNnvttZeNeppqqqms
        Z2rzzTe3TgO5v8sss0zJ/fbJJJNMYmMB6DH33HNPey/j0kYBCSoNCyx1ufDCC4MtY+aZZ56Si+Iz6Ir1
        vqQCKKLvNQSDdprQuvquQwQ35KOPPmqVcNZZZ7X7TjrpJBsfyfOOHTua7t272zEu+/nB8Qbxo2FvRSGY
        YPHamWeeac477zxz8cUXmyuvvLLlD0AsJtHmDzzwgHnwwQetBeH1118PrrAZPEtEJ2GV2G233awSEcWk
        x+YyduaPM2jQIKtARLszdMJJ8Nlnn9nzM8SS9yQRlDgscEVTooDnnHOOteFVAjddTs5NxmyiL6gSISCW
        a3L346H56quvgjOnx7PPPtvmWsoJrQP3Q++jRWeYoPdVKnFMU773pSV//vlncBV+WhSQQTz/vPbwv//9
        z7aKiy66qPdikghdAejIHCTMK5MGtOr6Wmot/CHiQMvse39aEoV9lWb8xBNPtDvaAyH9M844o/cikop0
        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
</value>
  </data>
</root>